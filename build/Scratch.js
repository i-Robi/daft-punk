/**
 * @file Scratch
 * @author SÃ©bastien Robaszkiewicz [sebastien@robaszkiewicz.com]
 * @description Converts the action of scratching the screen or moving the
 * mouse into an energy value between 0 and 1.
 */

'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var EventEmitter = require('events').EventEmitter;

function speed(a, b) {
  var dX = a[0] - b[0];
  var dY = a[1] - b[1];
  var dT = b[2] - a[2];

  if (dX !== 0 && dY !== 0 && dT !== 0) return [Math.sqrt(dX * dX + dY * dY) / dT, b[2]];

  return [0, b[2]];
}

function acc(a, b) {
  var dS = b[0] - a[0];
  var dT = b[1] - a[1];

  if (dS !== 0 && dT !== 0) return [dS / dT, b[1]];

  return [0, b[1]];
}

function getTime() {
  return window.performance && window.performance.now ? window.performance.now() / 1000 : new Date().getTime() / 1000;
}

/**
 * @class LowPassFilter
 * @description Applies a low-pass filter.
 */

var LowPassFilter = (function () {
  function LowPassFilter(timeConstant) {
    _classCallCheck(this, LowPassFilter);

    this._XFiltered;
    this._previousTimestamp;
    this._timeConstant = timeConstant;
  }

  _createClass(LowPassFilter, [{
    key: '_decay',
    value: function _decay(dt) {
      return Math.exp(-2 * Math.PI * dt / this._timeConstant);
    }
  }, {
    key: 'input',
    value: function input(x) {
      var now = getTime();

      if (this._previousTimestamp) {
        var dt = now - this._previousTimestamp;
        var k = this._decay(dt);

        this._XFiltered = k * this._XFiltered + (1 - k) * x;
        this._previousTimestamp = now;

        return this._XFiltered;
      } else {
        this._previousTimestamp = now;
        this._XFiltered = x;
        return;
      }
    }
  }]);

  return LowPassFilter;
})();

var Scratch = (function (_EventEmitter) {
  _inherits(Scratch, _EventEmitter);

  function Scratch() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, Scratch);

    _get(Object.getPrototypeOf(Scratch.prototype), 'constructor', this).call(this);

    this.event = null;

    this._bufferLength = options.bufferLength || 5;
    this._filter = new LowPassFilter(0.05);
    this._surface = options.surface || document;
    this._timeout = null;

    this._x = null;
    this._y = null;
    this._s = null;
    this._lastS = null;
    this._acc = null;

    this._surface.addEventListener('mousemove', this.onMotion.bind(this));
    this._surface.addEventListener('touchmove', this.onMotion.bind(this));
  }

  _createClass(Scratch, [{
    key: 'onMotion',
    value: function onMotion(e) {
      var timestamp = e.timeStamp / 1000;
      var x = undefined;
      var y = undefined;

      switch (e.type) {
        case 'mousemove':
          x = e.clientX;
          y = e.clientY;
          break;
        case 'touchmove':
          x = e.changedTouches[0].clientX;
          y = e.changedTouches[0].clientY;
          break;
      }

      var pos = [x, y, timestamp];

      if (this._pos) {
        this._lastS = this._s;
        this._s = speed(pos, this._pos);
      }

      if (this._lastS) this._acc = acc(this._s, this._lastS);

      this._pos = [x, y, timestamp];

      if (this._acc) {
        this.event = this._filter.input(Math.min(Math.abs(this._acc[0] / 100000), 1));
      }

      // Weird bug on Safari desktop (it looks like that displaying something in
      // the console prevents the guitar from blocking).
      // console.log(pos[0]);

      this.emit('scratch', this.event);

      clearTimeout(this._timeout);
      this._timeout = this.timeoutFun();
    }
  }, {
    key: 'timeoutFun',
    value: function timeoutFun() {
      var _this = this;

      return setTimeout(function () {
        _this.event = _this._filter.input(0);
        _this.emit('scratch', _this.event);
        _this._timeout = _this.timeoutFun();
      }, 50);
    }
  }]);

  return Scratch;
})(EventEmitter);

module.exports = Scratch;
//# sourceMappingURL=data:application/json;base64,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LElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUM3QyxDQUFDO09BQ0g7Ozs7OztBQU1ELFVBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFakMsa0JBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsVUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7S0FDbkM7OztXQUVTLHNCQUFHOzs7QUFDWCxhQUFPLFVBQVUsQ0FBQyxZQUFNO0FBQ3RCLGNBQUssS0FBSyxHQUFHLE1BQUssT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuQyxjQUFLLElBQUksQ0FBQyxTQUFTLEVBQUUsTUFBSyxLQUFLLENBQUMsQ0FBQztBQUNqQyxjQUFLLFFBQVEsR0FBRyxNQUFLLFVBQVUsRUFBRSxDQUFDO09BQ25DLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDUjs7O1NBdkVHLE9BQU87R0FBUyxZQUFZOztBQTJFbEMsTUFBTSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMiLCJmaWxlIjoic3JjL2pzL1NjcmF0Y2guanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIFNjcmF0Y2hcbiAqIEBhdXRob3IgU8OpYmFzdGllbiBSb2Jhc3praWV3aWN6IFtzZWJhc3RpZW5Acm9iYXN6a2lld2ljei5jb21dXG4gKiBAZGVzY3JpcHRpb24gQ29udmVydHMgdGhlIGFjdGlvbiBvZiBzY3JhdGNoaW5nIHRoZSBzY3JlZW4gb3IgbW92aW5nIHRoZVxuICogbW91c2UgaW50byBhbiBlbmVyZ3kgdmFsdWUgYmV0d2VlbiAwIGFuZCAxLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuXG5mdW5jdGlvbiBzcGVlZChhLCBiKSB7XG4gIGNvbnN0IGRYID0gYVswXSAtIGJbMF07XG4gIGNvbnN0IGRZID0gYVsxXSAtIGJbMV07XG4gIGNvbnN0IGRUID0gYlsyXSAtIGFbMl07XG5cbiAgaWYgKGRYICE9PSAwICYmIGRZICE9PSAwICYmIGRUICE9PSAwKVxuICAgIHJldHVybiBbTWF0aC5zcXJ0KGRYICogZFggKyBkWSAqIGRZKSAvIGRULCBiWzJdXTtcblxuICByZXR1cm4gWzAsIGJbMl1dO1xufVxuXG5mdW5jdGlvbiBhY2MoYSwgYikge1xuICBjb25zdCBkUyA9IGJbMF0gLSBhWzBdO1xuICBjb25zdCBkVCA9IGJbMV0gLSBhWzFdO1xuXG4gIGlmIChkUyAhPT0gMCAmJiBkVCAhPT0gMClcbiAgICByZXR1cm4gW2RTIC8gZFQsIGJbMV1dO1xuXG4gIHJldHVybiBbMCwgYlsxXV07XG59XG5cbmZ1bmN0aW9uIGdldFRpbWUoKSB7XG4gIHJldHVybiAod2luZG93LnBlcmZvcm1hbmNlICYmIHdpbmRvdy5wZXJmb3JtYW5jZS5ub3cpID9cbiAgICB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCkgLyAxMDAwIDogbmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwO1xufVxuXG4vKipcbiAqIEBjbGFzcyBMb3dQYXNzRmlsdGVyXG4gKiBAZGVzY3JpcHRpb24gQXBwbGllcyBhIGxvdy1wYXNzIGZpbHRlci5cbiAqL1xuY2xhc3MgTG93UGFzc0ZpbHRlciB7XG4gIGNvbnN0cnVjdG9yKHRpbWVDb25zdGFudCkge1xuICAgIHRoaXMuX1hGaWx0ZXJlZDtcbiAgICB0aGlzLl9wcmV2aW91c1RpbWVzdGFtcDtcbiAgICB0aGlzLl90aW1lQ29uc3RhbnQgPSB0aW1lQ29uc3RhbnQ7XG4gIH1cblxuICBfZGVjYXkoZHQpIHtcbiAgICByZXR1cm4gTWF0aC5leHAoLTIgKiBNYXRoLlBJICogZHQgLyB0aGlzLl90aW1lQ29uc3RhbnQpO1xuICB9XG5cbiAgaW5wdXQoeCkge1xuICAgIGNvbnN0IG5vdyA9IGdldFRpbWUoKTtcblxuICAgIGlmICh0aGlzLl9wcmV2aW91c1RpbWVzdGFtcCnCoHtcbiAgICAgIGNvbnN0IGR0ID0gbm93IC0gdGhpcy5fcHJldmlvdXNUaW1lc3RhbXA7XG4gICAgICBjb25zdCBrID0gdGhpcy5fZGVjYXkoZHQpO1xuXG4gICAgICB0aGlzLl9YRmlsdGVyZWQgPSBrICogdGhpcy5fWEZpbHRlcmVkICsgKDEgLSBrKSAqIHg7XG4gICAgICB0aGlzLl9wcmV2aW91c1RpbWVzdGFtcCA9IG5vdztcblxuICAgICAgcmV0dXJuIHRoaXMuX1hGaWx0ZXJlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcHJldmlvdXNUaW1lc3RhbXAgPSBub3c7XG4gICAgICB0aGlzLl9YRmlsdGVyZWQgPSB4O1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxufVxuXG5jbGFzcyBTY3JhdGNoIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuZXZlbnQgPSBudWxsO1xuXG4gICAgdGhpcy5fYnVmZmVyTGVuZ3RoID0gb3B0aW9ucy5idWZmZXJMZW5ndGggfHwgNTtcbiAgICB0aGlzLl9maWx0ZXIgPSBuZXcgTG93UGFzc0ZpbHRlcigwLjA1KTtcbiAgICB0aGlzLl9zdXJmYWNlID0gb3B0aW9ucy5zdXJmYWNlIHx8IGRvY3VtZW50O1xuICAgIHRoaXMuX3RpbWVvdXQgPSBudWxsO1xuXG4gICAgdGhpcy5feCA9IG51bGw7XG4gICAgdGhpcy5feSA9IG51bGw7XG4gICAgdGhpcy5fcyA9IG51bGw7XG4gICAgdGhpcy5fbGFzdFMgPSBudWxsO1xuICAgIHRoaXMuX2FjYyA9IG51bGw7XG5cbiAgICB0aGlzLl9zdXJmYWNlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMub25Nb3Rpb24uYmluZCh0aGlzKSk7XG4gICAgdGhpcy5fc3VyZmFjZS5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLm9uTW90aW9uLmJpbmQodGhpcykpO1xuICB9XG5cbiAgb25Nb3Rpb24oZSkge1xuICAgIGNvbnN0IHRpbWVzdGFtcCA9IGUudGltZVN0YW1wIC8gMTAwMDtcbiAgICBsZXQgeDtcbiAgICBsZXQgeTtcblxuICAgIHN3aXRjaCAoZS50eXBlKSB7XG4gICAgICBjYXNlICdtb3VzZW1vdmUnOlxuICAgICAgICB4ID0gZS5jbGllbnRYO1xuICAgICAgICB5ID0gZS5jbGllbnRZO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RvdWNobW92ZSc6XG4gICAgICAgIHggPSBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFg7XG4gICAgICAgIHkgPSBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGNvbnN0IHBvcyA9IFt4LCB5LCB0aW1lc3RhbXBdO1xuXG4gICAgaWYgKHRoaXMuX3Bvcykge1xuICAgICAgdGhpcy5fbGFzdFMgPSB0aGlzLl9zO1xuICAgICAgdGhpcy5fcyA9IHNwZWVkKHBvcywgdGhpcy5fcG9zKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fbGFzdFMpXG4gICAgICB0aGlzLl9hY2MgPSBhY2ModGhpcy5fcywgdGhpcy5fbGFzdFMpO1xuXG4gICAgdGhpcy5fcG9zID0gW3gsIHksIHRpbWVzdGFtcF07XG5cbiAgICBpZiAodGhpcy5fYWNjKSB7XG4gICAgICB0aGlzLmV2ZW50ID0gdGhpcy5fZmlsdGVyLmlucHV0KFxuICAgICAgICBNYXRoLm1pbihNYXRoLmFicyh0aGlzLl9hY2NbMF0gLyAxMDAwMDApLCAxKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBXZWlyZCBidWcgb24gU2FmYXJpIGRlc2t0b3AgKGl0IGxvb2tzIGxpa2UgdGhhdCBkaXNwbGF5aW5nIHNvbWV0aGluZyBpblxuICAgIC8vIHRoZSBjb25zb2xlIHByZXZlbnRzIHRoZSBndWl0YXIgZnJvbSBibG9ja2luZykuXG4gICAgLy8gY29uc29sZS5sb2cocG9zWzBdKTtcblxuICAgIHRoaXMuZW1pdCgnc2NyYXRjaCcsIHRoaXMuZXZlbnQpO1xuXG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXQpO1xuICAgIHRoaXMuX3RpbWVvdXQgPSB0aGlzLnRpbWVvdXRGdW4oKTtcbiAgfVxuXG4gIHRpbWVvdXRGdW4oKSB7XG4gICAgcmV0dXJuIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5ldmVudCA9IHRoaXMuX2ZpbHRlci5pbnB1dCgwKTtcbiAgICAgIHRoaXMuZW1pdCgnc2NyYXRjaCcsIHRoaXMuZXZlbnQpO1xuICAgICAgdGhpcy5fdGltZW91dCA9IHRoaXMudGltZW91dEZ1bigpO1xuICAgIH0sIDUwKTtcbiAgfVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2NyYXRjaDtcbiJdfQ==